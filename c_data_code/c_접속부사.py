# -*- coding: utf-8 -*-
# """���� ���� �� ���� ����C �ҿ������

# Automatically generated by Colaboratory.

# Original file is located at
#     https://colab.research.google.com/drive/1itrvlJ-aIKS-dbxwLAMBtWcHqqEQmPWF
# """

!pip install konlpy 

from konlpy.tag import Okt 
import os
import numpy as np  
import pandas as pd
from datetime import datetime
import json
import re
from tqdm.notebook import tqdm

df = pd.read_csv('preprocessed_review.csv')

# �࿭��ȯ
df = df.transpose()
df.rename(columns = df.iloc[0], inplace = True)
df= df.drop(df.index[0])

# �࿭��ȯ �� ����Ʈȭ 
df_list = []
for i in range(len(df.columns)):
  lista = []
  for j in range(len(df)):
    
    if not pd.isna(df[df.columns[i]][j]):
      lista.append(df[df.columns[i]][j])
  df_list.append(lista)

# ����� Ű���� ���� ��������
positivewords = pd.read_table('positive words.txt', sep = '\n', header = None)

#����� Ű���� ���� ����Ʈȭ
positivewords_list = []
for i in  range(len(positivewords[0])):
  positivewords_list.append(positivewords[0][i])

#���Ӻλ� ���� ��������
adverbs = pd.read_table('conjunction_adverbs.txt', sep = '\n', header = None)

#���Ӻλ� ���� ����Ʈȭ
adverbs_list = []
for i in  range(len(adverbs[0])):
  adverbs_list.append(adverbs[0][i])

#���� ���� �� ���Ӻλ� ���� Ű���尡 �ִ� �ܾ��� ��ǥ�� ���� 
process1 = []

for i in range(len(df_list)):
  for j in range(len(df_list[i])):
    if df_list[i][j].split(',')[0][2:-1] in adverbs_list and j != 0:
      process1.append([i,j])

#����� ��ǥ���� ���� ���������� ��ǥ��  ����
process12 = []
for i in range(len(process1)):
  process12.append(process1[i][0])

#���Ӻλ� ���Ե� ����鸸 ���� ����Ʈȭ >>>  ���� ��ǥ���� ���� �����̽�
adverbreview_list = []
for i in range(len(df_list)):
  for j in range(len(df_list[i])):

    if [i,j] in process1:
      adverbreview_list.append(df_list[i][0:j+1])
      adverbreview_list.append(df_list[i][j+1:])

#���Ӻλ簡 ���Ե��� ���� ����Ʈ��� ���Ӻλ� �������� �����̽� �� ����Ʈ ��ġ��
new_adverbreview_list = []

for i in range(len(df_list)):
  if i not in process12:
    new_adverbreview_list.append(df_list[i])

for i in adverbreview_list:
  new_adverbreview_list.append(i)

#����� Ű���带 �̿��Ͽ� Ű���尡 ���Ե��� ���� ����鸸 ���� ����Ʈȭ
pure_p = []
pure_p_index= []
process2 = []

for i in range(len(new_adverbreview_list)):
  for j in range(len(new_adverbreview_list[i])):
    if new_adverbreview_list[i][j].split(',')[0][2:-1] in positivewords_list:
      process2.append(i)
  
for i in range(len(new_adverbreview_list)):
  if i not in process2:
    pure_p.append(new_adverbreview_list[i])
    pure_p_index.append(new_adverbreview_list[i])

#������� ����Ʈ�� �̷���� ���� ����� ���並 �ܾ���� ����Ʈ�� ����

df_p2 = []

for i in range(len(pure_p)):
  for j in range(len(pure_p[i])):
    df_p2.append([pure_p[i][j].split(',')[0][2:-1], pure_p[i][j].split(',')[1][2:-2]])

#Ư�� ǰ��鸸 ��󳻱�

tag_sep = []

for i in range(len(df_p2)):
  pos = df_p2[i][1]
  if pos in ['Noun', 'Adjective' ]:
      tag_sep.append(df_p2[i][0])

#2���� �̻� ��󳻱�

df_p3 = []
for i in tag_sep:
  if len(i) >= 2:
    df_p3.append(i)

#�ҿ����� ��������

stopwords = pd.read_table('stopwords of positive reviews.txt', sep = '\n', header = None)

#�ҿ����� ����Ʈȭ

stopwords_list = []
for i in  range(len(stopwords[0])):
  stopwords_list.append(stopwords[0][i])

#�ҿ������� ���Ե� Ű���� �����ϰ� ����Ʈ �����

df_p4 = []
for i in range(len(df_p3)):
  if df_p3[i] not in stopwords_list:
    df_p4.append(df_p3[i])

#������������ȭ
df = pd.DataFrame(df_p4)

#�� Ű������ ���� ã��
num_df = df[0].value_counts()

#���� ���Ϸ� ����
num_df.to_excel(excel_writer='�α�_����_����_C.xlsx')

# pd.DataFrame(tag_sep).to_excel(excel_writer = 'sep2.xlsx')

# df2 = pd.DataFrame(pure_p_index)

# df2.to_excel(excel_writer='pure_p_C.xlsx')